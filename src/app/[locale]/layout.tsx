import "@/styles/globals.css";
import type { Metadata } from "next";
import { ReactNode } from "react";
import { routing } from "@/i18n/routing";
import { Cairo } from "next/font/google";
import Providers from "@/providers/providers";
import { Toaster } from "@/components/ui/sonner";

type Props = {
  children: ReactNode;
  params: { locale: string };
};

const cairo = Cairo({
  subsets: ["arabic"],
  weight: ["300", "400", "600", "700", "800", "900"],
  variable: "--font-cairo",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// function to get the translations
async function getMessages(locale: string) {
  try {
    return (await import(`../../../messages/${locale}.json`)).default;
  } catch {
    return {};
    // notFound();
  }
}

// function to generate the routes for all the locales
export async function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export default async function RootLayout({ children, params }: Props) {
  const { locale } = params;
  const messages = await getMessages(locale);
  const dir = locale === "ar" ? "rtl" : "ltr";

  return (
    <html lang={locale} dir={dir}>
      <body className={`${cairo.className} bg-background`}>
        <Providers locale={locale} messages={messages}>
          {children}
          <Toaster
            toastOptions={{
              style: {
                fontSize: "16px",
              },
            }}
            richColors
            position="top-center"
          />
        </Providers>
      </body>
    </html>
  );
}
